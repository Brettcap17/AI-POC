
layout: function
title: Reactivate User Smart Service
category: function_page
compatibility: '~portal, -om, -crf'
excerpt: The Reactivate User smart service allows you to select a user whose access to the system was previously disabled and re-enable the user account.
fnccat: Smart_Service
fncexample: Click on the function name for examples.
fncname: a!reactivateUser
fncsubcat: Identity_Management
parameters:
  - keyword: user
    types: User
    description: The user to reactivate.
  - keyword: onSuccess
    types: Any Type
    description: A list of saves or an HTTP response to execute after the smart service executes successfully. Created with a!save() or a!httpResponse().
  - keyword: onError
    types: Any Type
    description: A list of saves or an HTTP response to execute when the smart service does not execute successfully. Created with a!save() or a!httpResponse().
reftype: smart_service
sscat: Identity_Management
ssicon: Reactivate_User.png
ssparentcat: Automation_Services

Overview
{{ page.excerpt }} You must be a System Administrator in order to perform this task.

appian-style-caution
Attempting to complete this task without sufficient user rights causes an alert to be sent to the Process Administrator, and pauses the process.

Properties


Category: Identity Management


Icon: 


Assignment Options: Attended/Unattended


Configuration options
This section contains tab configuration details specific to this smart service. For more information about common configurations see the Process Node Properties page.
Data tab
This tab displays the node inputs and node outputs for the service node. You can add additional inputs and outputs, if needed. 
Node inputs
The default inputs are:
| Input | Data Type | Required | Multiple| 
| - | - | - | - |
| User | User | Yes | No |
If the node is run without being assigned to a user (or a group) you must specify values for each of the Node Inputs listed in the table above. You can either manually enter data into the text-field, or a value can be generated using the Expression Editor. When using the Expression Editor, you can reference and modify Process Variables, rules, constants, and other data. The expressions then populate your Node Input values.
If the node is assigned, the Node Input values are typed by your assigned user(s) into a form.
Node outputs
This node does not return any values.
a!reactivateUser()
The Reactivate User smart service is available as an expression function that can be executed inside a saveInto parameter on an interface component or as part of a Web API.
Syntax
{% include fncsyntax.html %}
Parameters
{% include parameter_table.html parameters=page.parameters header=page.reftype %}