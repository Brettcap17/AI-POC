
layout: function
title: Export Process Report to Excel Smart Service
category: function_page
compatibility: '~portal, -om, -crf'
excerpt: The Export Process Report to Excel Smart Service allows designers to safely export large amounts of data from process reports.
fnccat: Smart_Service
fncexample: Click on the function name for examples.
fncname: a!exportProcessReportToExcel
fncsubcat: Document_Generation
parameters:
  - keyword: report
    types: Document
    description: The process report to query.
  - keyword: filters
    types: Any Type
    description: '(Optional) A set of conditions to apply to the queried data. Can use either a list of a!queryFilter() or a single a!queryLogicalExpression(). When using a list of a!queryFilter(), all filters are combined using the AND operator. User filters saved to the process report are applied before these are.'
  - keyword: context
    types: Any Type
    description: 'Contains an array of either Group, User, Number (Integer), or Process Model to pass to the report context.'
  - keyword: documentName
    types: Text
    description: The name of the new document that is to be created by this smart service.
  - keyword: documentDescription
    types: Text
    description: (Optional) A brief description of the document.
  - keyword: saveInFolder
    types: Folder
    description: The folder where the newly created document is to be stored. Applicable and required when creating a new document.
  - keyword: documentToUpdate
    types: Document
    description: 'The existing document to update with the exported data. This can be useful when using the smart service multiple times in the same process model, or if formatting is needed. See Supported Excel Formatting. Appian supports Excel 2007 and above. Note that a new version of this document will be created.'
  - keyword: includeHeader
    types: Boolean
    description: (Optional) Outputs the field's label in the first row of the document if set to true. Default is true.
  - keyword: sheetName
    types: Text
    description: '(Optional) The name of the sheet where data will be added as a result of executing this smart service. Certain characters ([ ] / \ ? *) will be replaced with underscores.'
  - keyword: sheetNumber
    types: Number (Integer)
    description: '(Optional) The sheet number where data will be added as a result of executing this smart service. Default is 1, the first sheet.'
  - keyword: startingCell
    types: Text
    description: (Optional) The cell where the output will begin. Default is A1. Any data in rows above this cell will remain in the sheet; any data in the same row or below will be removed and overwritten.
  - keyword: customCellPositions
    types: List of Text String
    description: (Optional) Array of cell positions where custom cell values should be added.
  - keyword: customCellValues
    types: List of Text String
    description: (Optional) Array of values to be added on the specified custom cell position.
  - keyword: onSuccess
    types: Any Type
    description: A list of saves or an HTTP response to execute after the smart service executes successfully. Created with a!save() or a!httpResponse(). The document ID of the created/updated document is returned in the fv!newDocument function variable.
  - keyword: onError
    types: Any Type
    description: A list of saves or an HTTP response to execute when the smart service does not execute successfully. Created with a!save() or a!httpResponse().
reftype: smart_service
sscat: Document_Generation
ssicon: Export_Process_Report_to_Excel.png
ssparentcat: Automation_Services


appian-style-note
This is the new Export to Excel smart service. If you need to export to CSV, use the Export Process Report to CSV Smart Service.

Overview
The Export Process Report to Excel Smart Service allows designers to safely export large amounts of data from process reports. 
It can be used to export data from Appian that can then be imported into other third-party applications. A designer may want to export all data or just updates made within the last day.
The Smart Service returns a document in an Excel format. 

appian-style-note
Appian strongly recommends customers to use this smart service in place of Export Portal Report to Excel (part of the Excel Tools Plug-in).  

Properties

Category: Document Generation

Icon:  


Assignment Options: This smart service can be either attended or unattended (default).


Configuration options
Data tab
Node inputs
| Name | Type | Description | Required | Multiple |
| - | - | - | - | - |
| Process Report | Process Report | The process report to query. | Y | N      
| Filters | Any Type | A set of conditions to apply to the queried data. Can use either a list of a!queryFilter() or a single a!queryLogicalExpression(). When using a list of a!queryFilter(), all filters are combined using the AND operator. Filters saved to the process report are applied before these are applied. | N | Y      
| Report Context | Any Type | Contains an array of either Group, User, Number (Integer), or Process Model to pass to the report context. | N | N      
| New Document Name | Text | The name of the new document that is to be created by this smart service activity. | N | N      
| New Document Description | Text | A brief description of the document. | N | N      
| Save in Folder | Folder | The folder where the newly created document is to be stored. Applicable and required when creating a new document. | N | N      
| Document to Update | Document | The existing document to update with the exported data. This can be useful when using the smart service multiple times in the same process model, or if formatting is needed. See Supported Excel Formatting. Appian supports Excel 2007 and above.  Note that a new version of this document will be created. | N | N      
| Include header | Boolean | Outputs the label of each field in the first row of the document if set to true. Default is true. | N | N      
| Sheet Name | Text | The name of the sheet where data will be added as a result of executing this smart service. The following characters will be replaced with underscores: [ ] / \ ? * | N | N      
| Sheet Number | Number (Integer) | The sheet number where data will be added as a result of executing this smart service. Default is 1, the first sheet. | N | N      
| Starting Cell | Text | The cell where the output will begin. Default is "A1". Any data in rows above this cell will remain in the sheet; any data in the same row or below will be removed and overwritten. | N | N      
| Custom Cell Positions | Text | Array of cell positions where custom cell values should be added. | N | Y      
| Custom Cell Values | Text | Array of values to be added on the specified custom cell position. | N | Y        
Node outputs
| Name | Data Type | Description |
| - | - | - |
| New Document | Document | The document generated as a result of executing this smart service. |
a!exportProcessReportToExcel()
Exports data from a process report to Excel. This function will only execute inside a saveInto on a component or as part of a Web API.
Syntax
{% include fncsyntax.html %}
Parameters
{% include parameter_table.html parameters=page.parameters header=page.reftype %}
Returns
Document
Example
Copy and paste an example into an Appian Expression Editor to experiment with it.
You will need to provide a constant to replace both REPORT and TARGET_FOLDER.
sail 
a!localVariables(
  local!exportId,
  {
    a!linkField(
      labelPosition: "COLLAPSED",
      links: a!dynamicLink(
        label: "Render Excel File",
        saveInto: {
          a!exportProcessReportToExcel(
            report: cons!REPORT,
            documentName: "Report " & now(),
            saveInFolder: cons!TARGET_FOLDER,
            onSuccess: a!save(
              local!exportId,
              fv!newDocument
            )
          )
        }
      )
    )
  }
) 
Usage considerations
The following configurations and expected behavior apply when using the Export Process Report to Excel Smart Service from the Process Modeler:

You may specify either a LogicalExpression or a list of Filters in the Filters parameter but not both. If you wish to specify only one condition, specify a Filter. If you wish to specify more than one condition, use LogicalExpression or use a list of Filters.
To create multiple tabs in the same Excel spreadsheet with data from different process reports, use multiple nodes of this smart service. You can use the Document to Update and Sheet Number parameters when exporting a second process report.
Due to performance considerations, there is a max row limit of 10,000 rows and a max column limit of 50 columns that can be exported.
To export your data to a preformatted spreadsheet, use the Document to Update and Starting Cell parameters. Learn how to export data to a formatted Excel sheet.

Exporting data to a formatted Excel sheet
Itâ€™s common for businesses to use standard, preformatted spreadsheets to display and share data. For instance, a preformatted spreadsheet may have a cover page with different font size and colors; instructions above a table where data will be added; formatted table headers; or a specific column width.
When you use this smart service, you can determine the cell in an existing spreadsheet where the output should begin. This is called the Starting Cell parameters. Once you specify the Starting Cell, any cells above this point will keep their original formatting, such as alignment, font, border, fill options, column width, and frozen rows and columns. 
To export your data to a preformatted spreadsheet:
1. Create a spreadsheet with any necessary information and formatting. This will be the original spreadsheet where the data will be exported to. 
1. Configure the smart service, and set the following parameters:
  - Set the Document to Update parameter to the spreadsheet you just created.
  - Set the Starting Cell parameter to the appropriate cell. Any cells that start at or below the Starting Cell will not maintain any formatting.
1. Execute the smart service. This will create a new version of your spreadsheet with your exported data and formatting.
Supported Excel formatting {#prodlink-excel-formatting}
The following table shows the formatting options supported by this smart service. 
Generic formatting options apply to all data in a given sheet; whereas cell formatting options only apply to any rows that are not updated by these smart services (i.e. custom cell positions/values, starting cell).


Formatting Type
Details


Generic Formatting


Column widths
Frozen rows and columns
Tab colors
Sheet visibility




Cell Formatting: Number


Number
Currency
Accounting
Date
time
Percentage
Fraction
Scientific
Text
special and custom




Cell Formatting: Alignment


Horizontal Alignment
Vertical Alignment 
Indentation 
Orientation 
Wrap Text 
Shrink to Fit
Merge Cell




Cell Formatting: Font


Type: Calibri, Arial, etc.
Style: Bold, Italic, etc.
Size: 8, 9, 10, etc.
Underline: Single, double, etc.
Color
Effects




Cell Formatting: Border


Line Style
Line Color
Border options




Cell Formatting: Fill Options


Background color
Pattern color
Pattern style




Unsupported Excel formatting and elements
The following list displays Excel options that are not supported by this smart service:
- Charts
- Excel formulas
- Filters on columns
- Formulas
- Images
- Links
- Macros
- Any formatting options that are not listed above
Related objects
Data Types:

Query Filter
Logical Expression

See also

Export Process Report To CSV Smart Service
Smart Services Library 
