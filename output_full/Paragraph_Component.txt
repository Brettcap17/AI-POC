
layout: function
title: Paragraph Component
category: function_page
compatibility: -crf
excerpt: Displays and allows entry of multiple lines of text.
fnccat: Interface_Component
fncexample: Click on the function name for examples.
fncname: a!paragraphField
fncsubcat: Inputs
parameters:
  - keyword: label
    name: Label
    types: Text
    description: Text to display as the field label.
  - keyword: instructions
    name: Instructions
    types: Text
    description: Supplemental text about this field.
  - keyword: required
    name: Required
    types: Boolean
    description: |
      Determines if a value is required to submit the form. Default: false.
  - keyword: readOnly
    name: Read-only
    types: Boolean
    description: |
      Determines if the field should display as not editable. Default: false.
  - keyword: disabled
    name: Disabled
    types: Boolean
    description: |
      Determines if the field should display as potentially editable but grayed out. Default: false.
  - keyword: value
    name: Display Value
    types: Text
    description: Text to display in the field.
  - keyword: validations
    name: Validations
    types: List of Text String
    description: Validation errors to display below the field when the value is not null.
  - keyword: saveInto
    name: Save Input To
    types: List of Save
    description: |
      One or more variables that are updated with the text when the user changes it. Use a!save() to save a modified or alternative value to a variable.
  - keyword: refreshAfter
    name: Refresh After
    types: Text
    description: |
      Determines when the interface is refreshed with the saved value from the barcode field. Valid values are "KEYPRESS" to refresh after every character typed into the field and "UNFOCUS" (the default value) to refresh when the user deselects the field after changing its value.
  - keyword: labelPosition
    name: Label Position
    types: Text
    description: |
      Determines where the label appears. Valid values: 
        - "ABOVE" (default) Displays the label above the component.
        - "ADJACENT" Displays the label to the left of the component.
        - "COLLAPSED" Hides the label. The label will still be read by screen readers; see accessibility considerations for more information.
        - "JUSTIFIED" Aligns the label alongside the component starting at the edge of the page.
  - keyword: validationGroup
    name: Validation Group
    types: Text
    description: |
      When present, this field is only validated when a button in the same validation group is pressed. See the documentation for more information about how to use validation groups.
  - keyword: requiredMessage
    name: Required Message
    types: Text
    description: |
      Custom message to display when the field's value is required and not provided.
  - keyword: height
    name: Height
    types: Text
    description: |
      Determines the field height. Valid values: "SHORT", "MEDIUM" (default), "TALL".
  - keyword: placeholder
    name: Placeholder
    types: Text
    description: Text to display in the field when it is empty. Does not show if the field is read only.
  - keyword: helpTooltip
    name: Help Tooltip
    types: Text
    description: |
      Displays a help icon with the specified text as a tooltip. The tooltip displays a maximum of 500 characters. The help icon does not show when the label position is "COLLAPSED".
  - keyword: showWhen
    name: Visibility
    types: Boolean
    description: |
      Determines whether the component is displayed on the interface. When set to false, the component is hidden and is not evaluated. Default: true.
  - keyword: accessibilityText
    name: Accessibility Text
    types: Text
    description: Additional text to be announced by screen readers. Used only for accessibility; produces no visible change.
  - keyword: characterLimit
    name: Character Limit
    types: Number (Integer)
    description: |
      Determines the maximum number of characters. Depending on the language, some characters may count as more than one.
  - keyword: showCharacterCount
    name: Show Character Limit Count
    types: Boolean
    description: |
      Determines if the character count displays on the paragraph field. Only applicable if the character limit is set. Default: true.
reftype: sailcomponent
scdisplayname: Paragraph
space: sail_component

Function
{% include fncsyntax.html %}
{{ page.excerpt }} For a single line of text, use a text component.
Parameters
{% include parameter_table.html parameters=page.parameters header=page.reftype %}
Usage considerations
Using the labelPosition and placeholder parameters

If you set labelPosition to "ADJACENT" or "ABOVE", but do not give a value for label, a space still displays to the left-side or above, respectively, of the component as if there was a label displayed. To ensure the component appears to the far left when label has no value, use "COLLAPSED" for labelPosition.
Whether placeholder text clears on focus or input varies by device and browser. Placeholder text does not display on Microsoft Internet Explorer 9.

Using the characterLimit parameter

Emojis and characters in some languages (for example, Chinese and Arabic) may be counted by characterLimit as more than one character.
The characterLimit parameter and character limits set on CDT fields must be independently maintained to ensure that the two limits match.
If you set readOnly to true, the component's character limit won't be displayed.

Using the readOnly parameter

If readOnly is set to true, the component's value displays without a box around it.
If you pass the same local variable to value and saveInto when readOnly is set to false, you can use the user's input in the component to modify the interface.

Examples
INCLUDE PAGE: SAIL intro
Paragraph with only an adjacent label
{% sailbox 600 %} 
a!paragraphField(
  label: "Description",
    labelPosition: "ADJACENT",
  value: "Expenses could not be submitted. When " & char(10) & " I click on the expenses link, I see an error page.",
  readOnly: true
)
{% endsailbox %}
Editable paragraph with a label and instructions
{% sailbox 600 %}
a!paragraphField(
  label: "Description",
  instructions: "The description must include the problem statement",
  value: "Expenses could not be submitted. When " & char(10) & " I click on the expenses link, I see an error page."
)
{% endsailbox %}
Paragraph using character limit
{% sailbox 600 %}
a!localVariables(
  local!storedQuote: "All we have to decide is what to do with the time that is given to us.",
  a!paragraphField(
    label: "Favorite Quote from a Book",
    value: local!storedQuote,
    saveInto: local!storedQuote,
    characterLimit: 300,
    showCharacterCount: true 
  )
)
{% endsailbox %}