
layout: function
title: a!multipleDropdownField_20r2 Component 
space: sail_component 
reftype: sailcomponent 
excerpt: 'Displays a long list of choices from which the user may select none, one, or many items and saves values based on the selected choices.'
category: function_page 
compatibility: -crf
fncname: a!multipledropdownField_20r2 
fncsubcat: Selection
fncexample: Click on the function name for examples. 
fnccat: Interface_Component 
scdisplayname: Multiple Dropdown 
evolved_fncname: a!multipleDropdownField
evolved_reason: Added an optional search box.
parameters:
  - keyword: label
    name: Label
    types: Text
    description: 'Text to display as the field label.'
  - keyword: instructions
    name: Instructions
    types: Text
    description: 'Supplemental text about this field.'
  - keyword: required
    name: Required
    types: Boolean
    description: 'Determines if a value is required to submit the form. Default: false.'
  - keyword: disabled
    name: Disabled
    types: Boolean
    description: 'Determines if the field should display as potentially editable but grayed out. Default: false.'
  - keyword: placeholder
    name: Placeholder
    types: Text
    description: 'Text to display in the field when it is empty.'
  - keyword: choiceLabels
    name: Choice Labels
    types: List of Text String
    description: 'Array of options for the user to select.'
  - keyword: choiceValues
    name: Choice Values
    types: List of Variant
    description: 'Array of values associated with the available choices.'
  - keyword: value
    name: Display Value
    types: List of Variant
    description: 'Values of choices to display as selected.'
  - keyword: validations
    name: Validations
    types: List of Text String
    description: 'Validation errors to display below the field when the value is not null.'
  - keyword: saveInto
    name: Save Input To
    types: List of Save
    description: 'One or more variables that are updated with the choice values when the user changes the selections.  Use a!save() to save a modified or alternative value to a variable.'
  - keyword: validationGroup
    name: Validation Group
    types: Text
    description: 'When present, this field is only validated when a button in the same validation group is pressed. See the documentation for more information about how to use validation groups.'
  - keyword: requiredMessage
    name: Required Message
    types: Text
    description: |
      Custom message to display when the field's value is required and not provided.
  - keyword: labelPosition
    name: Label Position
    types: Text
    description: |
      Determines where the label appears. Valid values: 
        - "ABOVE" (default) Displays the label above the component.
        - "ADJACENT" Displays the label to the left of the component.
        - "COLLAPSED" Hides the label. The label will still be read by screen readers; see accessibility considerations for more information.
        - "JUSTIFIED" Aligns the label alongside the component starting at the edge of the page.
  - keyword: helpTooltip
    name: Help Tooltip
    types: Text
    description: 'Displays a help icon with the specified text as a tooltip. The tooltip displays a maximum of 500 characters. The help icon does not show when the label position is "COLLAPSED".'
  - keyword: accessibilityText
    name: Accessibility Text
    types: Text
    description: 'Additional text to be announced by screen readers. Used only for accessibility; produces no visible change.'
  - keyword: showWhen
    name: Visibility
    types: Boolean
    description: 'Determines whether the component is displayed on the interface. When set to false, the component is hidden and is not evaluated. Default: true.'

Multiple dropdown
Function: a!multipleDropdownField_20r2()
Displays a long list of choices from which the user may select none, one, or many items and saves values based on the selected choices. To save the index instead of a value, use multiple dropdown by index.
If the choice is exclusive, then consider using radio buttons or a dropdown component.
If there aren't many choices, consider using checkboxes.
Parameters
{% include parameter_table.html parameters=page.parameters header=page.reftype %}
Notes

If you set Label Position to "ADJACENT" or "ABOVE", but do not give a value for Label, a space still displays to the left-side or above, respectively, of the component as if there was a label displayed. To ensure the component appears to the far left when Label has no value, use "COLLAPSED" for Label Position.
Choices display in the same order as defined in the Choice Labels parameter. The Choice Labels argument cannot be null.
If a single item is selected, the system saves a single-item array.
If no selection is made, the system saves a null value into the component's Save Selection To field. If a single item is selected, the system saves a single-item array.
Choice Labels and Choice Values must be the same length.
Choice Values cannot contain nulls or duplicate values.

Examples
INCLUDE PAGE: SAIL intro
Multiple Dropdown with the First Option Selected
{% sailbox 600 %}
a!localVariables(
  local!language: "en_US",
  a!multipleDropdownField_20r2(
    label: "Language",
    instructions: "In which languages are you proficient?",
    choiceLabels: {
      "English",
      "Spanish",
      "French",
      "German"
    },
    choiceValues: {
      "en_US",
      "es_ES",
      "fr_FR",
      "de_DE"
    },
    value: local!language,
    saveInto: local!language
  )
)
{% endsailbox %}