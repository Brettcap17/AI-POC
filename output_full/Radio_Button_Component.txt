
layout: function
title: Radio Button Component
category: function_page
compatibility: -crf
excerpt: Displays a limited set of choices from which the user must select one item and saves a value based on the selected choice.
fnccat: Interface_Component
fncexample: Click on the function name for examples.
fncname: a!radioButtonField
fncsubcat: Selection
parameters:
  - keyword: label
    name: Label
    types: Text
    description: Text to display as the field label.
  - keyword: instructions
    name: Instructions
    types: Text
    description: Supplemental text about this field.
  - keyword: required
    name: Required
    types: Boolean
    description: |
      Determines if a value is required to submit the form. Default: false.
  - keyword: disabled
    name: Disabled
    types: Boolean
    description: |
      Determines if the field should display as potentially editable but grayed out. Default: false.
  - keyword: choiceLabels
    name: Choice Labels
    types: List of Text String
    description: Array of options for the user to select.
  - keyword: choiceValues
    name: Choice Values
    types: List of Variant
    description: Array of values associated with the available choices.
  - keyword: value
    name: Display Value
    types: Any Type
    description: Value of choice to display as selected.
  - keyword: validations
    name: Validations
    types: List of Text String
    description: Validation errors to display below the field when the value is not null.
  - keyword: saveInto
    name: Save Input To
    types: List of Save
    description: |
      One or more variables that are updated with the choice value when the user changes the selection. Use a!save() to save a modified or alternative value to a variable.
  - keyword: validationGroup
    name: Validation Group
    types: Text
    description: |
      When present, this field is only validated when a button in the same validation group is pressed. See the documentation for more information about how to use validation groups.
  - keyword: requiredMessage
    name: Required Message
    types: Text
    description: |
      Custom message to display when the field's value is required and not provided.
  - keyword: labelPosition
    name: Label Position
    types: Text
    description: |
      Determines where the label appears. Valid values: 
        - "ABOVE" (default) Displays the label above the component.
        - "ADJACENT" Displays the label to the left of the component.
        - "COLLAPSED" Hides the label. The label will still be read by screen readers; see accessibility considerations for more information.
        - "JUSTIFIED" Aligns the label alongside the component starting at the edge of the page.
  - keyword: choiceLayout
    name: Choice Layout
    types: Text
    description: |
      Determines the layout. Valid values: "STACKED" (default), "COMPACT".
  - keyword: helpTooltip
    name: Help Tooltip
    types: Text
    description: |
      Displays a help icon with the specified text as a tooltip. The tooltip displays a maximum of 500 characters. The help icon does not show when the label position is "COLLAPSED".
  - keyword: accessibilityText
    name: Accessibility Text
    types: Text
    description: Additional text to be announced by screen readers. Used only for accessibility; produces no visible change.
  - keyword: showWhen
    name: Visibility
    types: Boolean
    description: |
      Determines whether the component is displayed on the interface. When set to false, the component is hidden and is not evaluated. Default: true.
  - keyword: choiceStyle
    name: Choice Style
    types: Text
    description: |
      Determines how the choices should be displayed on the interface. Valid values: "STANDARD" (default), "CARDS".
reftype: sailcomponent
scdisplayname: Radio Button
space: sail_component

Function
{% include fncsyntax.html %}
{{ page.excerpt }} To save the index instead of a value, use radio buttons by index.
If the choice is not exclusive, then consider using checkboxes or a multiple dropdown component.
If there are many choices, make the component as large as necessary to display all the options. If a more compact presentation is desirable, consider using a dropdown component.
Parameters
{% include parameter_table.html parameters=page.parameters header=page.reftype %}
Usage considerations
Using the choiceLayout parameter

The "COMPACT" option for choiceLayout should only be used for radio buttons with short choice labels, such as "Yes", "No", or "Maybe". When using the "COMPACT" option, labels with text longer than 2 lines will be truncated. 
For long labels, use the "STACKED" option for choiceLayout.

Using the choiceLayout and choiceValue parameters

Choices display in the same order as defined in the choiceLabels parameter.
The choiceLabels argument cannot be null.
choiceLabels and choiceValues must be the same length.
choiceValues cannot contain nulls or duplicate values.

Examples
INCLUDE PAGE: SAIL intro
Radio Button with first choice selected by default
{% sailbox 600 %}
a!localVariables(
  local!browser: "ffx",
  a!radioButtonField(
    label: "Browser",
    choiceLabels: {
      "Firefox",
      "Chrome",
      "Safari"
    },
    choiceValues: {
      "ffx",
      "chr",
      "sfr"
    },
    value: local!browser,
    saveInto: local!browser
  )
)
{% endsailbox %}
Radio Buttons with compact layout and cards style
{% sailbox 600 %}
a!localVariables(
  local!selected, 
  {
    a!radioButtonField(
    label: "Did the product meet your needs?",
    labelPosition: "ABOVE",
    choiceLabels: {"Yes", "No"},
    choiceValues: {1, 2},
    value: local!selected,
    saveInto: {local!selected},
    choiceLayout: "COMPACT",
    choiceStyle: "CARDS",
    validations: {}
    )
  }
)
{% endsailbox %}