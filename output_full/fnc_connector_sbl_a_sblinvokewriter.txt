
layout: function
title: a!sblInvokeWriter() Function
space: function_page
excerpt: "Invokes the method that will result in a modification to data in Siebel."
category: function_page
fncname: a!sblInvokeWriter
fncsubcat: "Siebel"
fncexample: "Click on the function name for examples."
fnccat: Connector
compatibility: -crf, ~portal, ~om
reftype: function
parameters:
  - keyword: scsExternalSystemKey
    types: Text
    description: |
      The key from the Third Party Credentials admin console page that corresponds to the set of credentials that should be used to authenticate.
  - keyword: usePerUserCredentials
    types: Boolean
    description: |
      If true the credentials set in the Third-Party Credentials settings page by the current user running the expression will be used. If false the site-wide credential values will be used.
  - keyword: hostname
    types: Text
    description: |
      The application server host of the SAP server (ASHOST). The value can be an IP address, a fully-qualified domain name, or SAP's router string format. For example, "/H/sap_router/W/password/H/app_host/S/service_port".
  - keyword: port 
    types: Number (Integer)
    description: |
      The port the Siebel server is listening on. For example, 2321.
  - keyword: enterpriseApp 
    types: Text
    description: |    
      The enterprise application of the target system. For example, "SBA_82".
  - keyword: appManager 
    types: Text
    description: |
      The active application manager of the target system. For example, "SSEObjMgr_enu".
  - keyword: language 
    types: Text
    description: |
      The target system language. For example, "enu".
  - keyword: businessService 
    types: Text
    description: |
      The name of the Siebel Business Service on which to invoke the method.
  - keyword: method 
    types: Text
    description: |
      The name of the method to invoke.
  - keyword: parameters 
    types: Any Type
    description: |
      The input parameters for the method, given as a dictionary where the parameter names are the dictionary field names and the parameter values are give as the dictionary field values.

Function
{% include fncsyntax.html %}
{{ page.excerpt }}
See also: Writer, bind().
Parameters
{% include parameter_table.html parameters=page.parameters header=page.reftype %}
Returns
Writer
This function returns a writer and must be used with the bind() function.
Examples
Copy and paste an example into an Appian Expression Editor to experiment with it.
Invoke a function to make a change on Siebel
When the user clicks on the buttons, this interface calls a function that performs a write on Siebel. In this case, the invoked method, "Update", appends the account ID to the account name for the account whose ID is passed by this interface. Since this is an invokeWriter, it does not return a result to Appian, and a separate query must be performed to view the results of this action.
sail 
=load(
  local!sblInvokeWriter: bind(
    null,
    a!sblInvokeWriter(
      scsExternalSystemKey: cons!SBL_SCS_KEY,
      usePerUserCredentials: true,
      hostname: cons!SBL_HOSTNAME,
      port: cons!SBL_PORT,
      enterpriseApp: cons!SBL_APP,
      appManager: cons!SBL_APP_MANAGER,
      language: cons!SBL_LANGUAGE,
      businessService: "UpdateAccount",
      method: "Update",
      parameters: _
    )
  ),
  {
      a!textField(
        instructions: "businessService: UpdateAccount, method: Update, AccId: 1-5J1C",
        readOnly: true,
        value: "Invoke Writer Response"
      ),
      a!buttonArrayLayout(
        buttons: {
          a!buttonWidget(
            label: "Invoke",
            value: { AccId: "1-5J1C" },
            saveInto: local!sblInvokeWriter
          )
        }
      )
  }
)