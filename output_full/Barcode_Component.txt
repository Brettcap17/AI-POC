
layout: function
title: Barcode Component
category: function_page
compatibility: -crf
excerpt: Displays and allows entry of a barcode value using a barcode scanner or manual input.
fnccat: Interface_Component
fncexample: Click on the function name for examples.
fncname: a!barcodeField
fncsubcat: Inputs
parameters:
  - keyword: label
    name: Label
    types: Text
    description: Text to display as the field label.
  - keyword: labelPosition
    name: Label Position
    types: Text
    description: |
      Determines where the label appears. Valid values: 
        - "ABOVE" (default) Displays the label above the component.
        - "ADJACENT" Displays the label to the left of the component.
        - "COLLAPSED" Hides the label. The label will still be read by screen readers; see accessibility considerations for more information.
        - "JUSTIFIED" Aligns the label alongside the component starting at the edge of the page.
  - keyword: instructions
    name: Instructions
    types: Text
    description: Supplemental text about this field.
  - keyword: acceptedTypes
    name: Accepted Types
    types: List of Text String
    description: |
      Determines the types of barcodes that are accepted in the field. Null results in all types being accepted. Valid values: "CODE39", "CODE93", "CODE128", "DATAMATRIX", "EAN8", "EAN13", "PDF417", "QRCODE", "UPCA", "UPCE".
  - keyword: value
    name: Display Value
    types: Text
    description: Text to display in the field.
  - keyword: saveInto
    name: Save Input To
    types: List of Save
    description: |
      One or more variables that are updated with the text when the user changes it. Use a!save() to save a modified or alternative value to a variable.
  - keyword: refreshAfter
    name: Refresh After
    types: Text
    description: |
      Determines when the interface is refreshed with the saved value from the barcode field. Valid values are "KEYPRESS" to refresh after every character typed into the field and "UNFOCUS" (the default value) to refresh when the user deselects the field after changing its value.
  - keyword: required
    name: Required
    types: Boolean
    description: |
      Determines if a value is required to submit the form. Default: false.
  - keyword: requiredMessage
    name: Required Message
    types: Text
    description: |
      Custom message to display when the field's value is required and not provided.
  - keyword: readOnly
    name: Read-only
    types: Boolean
    description: |
      Determines if the field should display as not editable. Default: false.
  - keyword: disabled
    name: Disabled
    types: Boolean
    description: |
      Determines if the field should display as potentially editable but grayed out. Default: false.
  - keyword: validations
    name: Validations
    types: List of Text String
    description: Validation errors to display below the field when the value is not null.
  - keyword: validationGroup
    name: Validation Group
    types: Text
    description: |
      When present, this field is only validated when a button in the same validation group is pressed. See the documentation for more information about how to use validation groups.
  - keyword: align
    name: Alignment
    types: Text
    description: |
      Determines alignment of the text value. Valid values: "LEFT" (default), "CENTER", "RIGHT".
  - keyword: placeholder
    name: Placeholder
    types: Text
    description: Text to display in the field when it is empty. Does not show if the field is read only.
  - keyword: helpTooltip
    name: Help Tooltip
    types: Text
    description: |
      Displays a help icon with the specified text as a tooltip. The tooltip displays a maximum of 500 characters. The help icon does not show when the label position is "COLLAPSED".
  - keyword: masked
    name: Masked
    types: Boolean
    description: |
      Determines if the value is obscured from view. Default: false.
  - keyword: accessibilityText
    name: Accessibility Text
    types: Text
    description: Additional text to be announced by screen readers. Used only for accessibility; produces no visible change.
  - keyword: showWhen
    name: Visibility
    types: Boolean
    description: |
      Determines whether the component is displayed on the interface. When set to false, the component is hidden and is not evaluated. Default: true.
reftype: sailcomponent
scdisplayname: Barcode
space: sail_component

Function
{% include fncsyntax.html %}
{{ page.excerpt }}
Parameters
{% include parameter_table.html parameters=page.parameters header=page.reftype %}
Usage considerations
Scanning on different devices

The native device's camera is used on mobile devices to scan barcodes.
The masked parameter is ignored on offline interfaces on Android devices. All barcode components are shown un-masked in this case.
The barcode component does not support barcode scanning on Appian's web user interfaces. Instead, users can manually enter barcode values.

Using the acceptedTypes parameter

Use the acceptedTypes parameter to specify one or more type(s) of barcode.

Examples
Copy and paste an example into the INTERFACE DEFINITION in EXPRESSION MODE to see it displayed.
Without masking
INCLUDE PAGE: SAIL intro
{% sailbox 520 %} 
a!barcodeField(
  label: "Product Barcode",
  instructions: "Scan a barcode from a product box"
)
{% endsailbox %}
Displays the following on Appian's browser user interfaces:
{screenshot}
Displays the following on Appian Mobile iOS application:
{screenshot}
Displays the following on Appian Mobile Android application:
{screenshot}
With masking
INCLUDE PAGE: SAIL intro
{% sailbox 520 %} 
a!barcodeField(
  label: "Product Barcode",
  instructions: "Scan a barcode from a product box",
  masked: true
)
{% endsailbox %}
Displays the following on Appian's web user interfaces:
{screenshot}
Displays the following on Appian Mobile iOS application:
{screenshot}
Displays the following on Appian Mobile Android application:
{screenshot}