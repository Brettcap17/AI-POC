
layout: function
title: Create Folder Smart Service
category: function_page
compatibility: '~portal, -om, -crf'
excerpt: The Create Folder smart service allows you to create a folder to store files within the Appian file system.
fnccat: Smart_Service
fncexample: Click on the function name for examples.
fncname: a!createFolder
fncsubcat: Document_Management
parameters:
  - keyword: name
    types: Text
    description: The name of the new folder.
  - keyword: parentFolder
    types: Folder
    description: 'When present, the new folder will be created in this Folder.'
  - keyword: parentKnowledgeCenter
    types: Knowledge Center
    description: 'When present, the new folder will be created in this Knowledge Center.'
  - keyword: onSuccess
    types: Any Type
    description: 'A list of saves or an HTTP response to execute after the smart service executes successfully. Created with a!save() or a!httpResponse(). When configuring this input, the fv!folder function variable (Folder) is available to specify the folder that was created. For more information, see Function Variables.'
  - keyword: onError
    types: Any Type
    description: A list of saves or an HTTP response to execute when the smart service does not execute successfully. Created with a!save() or a!httpResponse().
reftype: smart_service
sscat: Document_Management
ssicon: Create_Folder.png
ssparentcat: Automation_Services

Overview
{{ page.excerpt }} The Modify Folder Security Smart Service allows you to specify user rights for the folder.
To use the Create Folder smart service, select the activity and drag it onto the canvas to add it to your process model.
Properties


Category: Document Management


Icon: 


Assignment Options: Attended/Unattended


Configuration options
This section contains tab configuration details specific to this smart service. For more information about common configurations see the Process Node Properties page.
Data tab
The Data tab displays all the input and output parameters of the smart service. You can add additional input and output parameters, if needed. 
Node inputs
The default inputs that are generated for the Create Folder smart service are:
| Input | Type | Required | Multiple |
| - | - | - | - |
| Parent Knowledge Center | Knowledge Center | No | Optional |
| Parent Folder | Folder | No | Optional |
| New Folder Name | Text | Yes | Required | 
Configuring the Inputs

On the Inputs property sheet, specify values for either the Parent Knowledge Center node input, or the Parent Folder node input. You cannot specify both.
Either manually enter data into the text-field, or create the value using the Expression Editor.
When using the Expression Editor, you can select or modify process variables. Process variables can then be used to populate node inputs.
The Expression Editor can be accessed by selecting Expression... from the dropdown menu under the Value column. The Value list displays all process variables that have the same data type as the node input.

Node outputs
Capturing the Output
The Create Folder smart service returns the folder object that was created.

To reference the newly created folder elsewhere in the process model, save the activity's output to a process variable.
On the Data tab, select the Outputs tab.
On the Results list, select the output named The created folder (Folder). The Result Properties are displayed, listing the AC!NewFolder result and its save options.
Save the AC!NewFolder result into an existing process variable that holds a Folder data type on the Target list.create a new process variable to store the folder by clicking the New process variable button.

a!createFolder()
The Create Folder smart service is available as an expression function that can be executed inside a saveInto on a Interface Component or as part of a Web API.
Syntax
{% include fncsyntax.html %}
Parameters
{% include parameter_table.html parameters=page.parameters header=page.reftype %}
Folder naming considerations
Folder names cannot contain the following characters.
\ / ; : " | ? ' > < * ]
If a folder is created with an invalid name, an alert is sent to configured alert recipients indicating that the node failed to execute due to an invalid folder name. In such a scenario, you must change the name of the folder and re-execute the unattended create folder node. See Edit Mode for additional information.